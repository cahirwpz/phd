)abbrev package TXTPRT TextPrinter
TextPrinter() : with
    stdout : constant -> %

    "<<" : (%, String) -> %

    test : () -> Void

    -- Special characters
    eol : constant -> String

    -- ANSI escape codes
    reset : constant -> String
    bold : constant -> String
    underline : constant -> String
    italic : constant -> String
    inverse : constant -> String
    black : constant -> String
    red : constant -> String
    green : constant -> String
    yellow : constant -> String
    blue : constant -> String
    magenta : constant -> String
    cyan : constant -> String
    white : constant -> String
  == add
    import Character
    import String

    stdout == (0 :: SingleInteger) pretend %

    csi : String -> String
    csi s == concat [char 27 :: String, "[", s]

    eol == char 10 :: String

    reset == csi "0m"
    bold == csi "1m"
    italic == csi "3m"
    underline == csi "4m"
    inverse == csi "7m"
    black == csi "30m"
    red == csi "31m"
    green == csi "32m"
    yellow == csi "33m"
    blue == csi "34m"
    magenta == csi "35m"
    cyan == csi "36m"
    white == csi "37m"

    x << s == (SAY(s)$Lisp; x)

    test () ==
      stdout << "ala" << " " << "ma" << reset << " " << "kota" << eol
      Void

)abbrev category PRTCAT PrintableCategory
PrintableCategory() : Category == with
  "<<" : (TextPrinter, %) -> TextPrinter
