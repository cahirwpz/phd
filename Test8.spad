)abbrev package TEST8 Test8
Test8 : Exports == Implementation where

  Exports ==> with
    foo : (Integer, Integer) -> Integer
    bar : (Integer, Integer) -> Integer
    baz : (Integer, Integer, List(List(Integer))) -> Integer

  Implementation ==> add
    import Vector(Integer)
    import Matrix(Integer)

    -- [OK] Aggregate access.
    my_vec : Integer -> Vector(Integer)
    foo(i : Integer, j : Integer) : Integer ==
      v := my_vec(i + 1)
      v(j + 1)

    my_mat : Integer -> Matrix(Integer)
    bar(i : Integer, j : Integer) : Integer ==
      v := my_mat(i + 1)
      v(i + 1, j + 1)

    baz(i : Integer, j : Integer, ll : List(List(Integer))) : Integer ==
      ll(i)(j)
