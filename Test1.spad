)abbrev domain TEST1 Test1
Test1() : Exports == Implementation where
  I ==> Integer
  F ==> Float
  S ==> String

  Exports ==> with
    foo : I -> I
    foo : S -> F
    foo : (F, I) -> S
    bar : (Integer, Integer) -> Integer

  Implementation ==> add
    import Float
    import NonNegativeInteger

    -- doesn't work yet
    --foo : Integer -> Float

    foo a ==
      a2 := (a * a) $ Integer
      ma := - a
      if a >= 0
        then ma * 2
        else a2 + 2

    baz : (NonNegativeInteger, Integer) -> String

    bar (x, y) ==
      -- cannot remove next line, because branch merging doesn't work
      nx : Integer
      if x > 0 then
        y := -10
        nx := x * y
      else
        nx := -x 
      nx + y

