)abbrev package TEST9 Test9
Test9 : Exports == Implementation where
  Exports ==> with
    check : (Integer, Integer, Integer) -> Union(Integer, "failed")
    addZero : Union(Integer, String) -> Union(Integer, String)
    mycoerce : Integer -> Union(NonNegativeInteger, "failed")

  Implementation ==> add
    -- Subtyping => return union variants.
    check (x, min, max) ==
      x < min => "failed"
      x > max => "failed"
      x

    -- Subtyping => checking union variants.
    addZero x ==
      x case Integer => x * 10
      x case String => concat(x, "0")

    mycoerce x ==
      x >= 0 => qcoerce(x)
      "failed"
